application {
  config {
    baseName marissamayer
    applicationType monolith
    authenticationType jwt
    clientFramework react
    packageName com.esisalama.marissamayer
    serverPort 9999
  }
  entities *
  dto * with mapstruct
}
entity Utilisateur {

}

entity Reservation {
	statuts ReservationStatuts required,
    date Instant required,
}

entity Categorie {
	nom String required,
}

entity Cours {
    nom String required,
    description String required,
    duree Integer,
    prerequis String,
    prix Long
}

entity Paiement {
    montant BigDecimal required,
}

entity Catalogue {
    nom String required,
}

entity Evaluation {
    commentaire String required,
    createdAt Instant required,
}

entity Creneau {
	jour Jour,
    heureDebut String pattern(/^([0-2]\d|1[0-9]|2[0-3]):[0-5]\d$/),
    heureFin String pattern(/^([0-2]\d|1[0-9]|2[0-3]):[0-5]\d$/),
  	statuts CreneauStatuts required
}

enum ReservationStatuts {
    REJETEE, EN_ATTENTE, CONFIRMEE
}

enum Jour {
	LUNDI, MARDI, MERCREDI, JEUDI, VENDREDI, SAMEDI, DIMANCHE
}

enum CreneauStatuts {
	LIBRE, OCCUPEE
}

relationship OneToOne {
	Catalogue{user required} to User
}

relationship OneToMany {
	Catalogue to Cours{catalogue required}
}

relationship OneToOne {
	Paiement{reservation required} to Reservation
}

relationship OneToOne {
    Utilisateur{instance required} to User
}

relationship OneToMany {
	Utilisateur to Reservation{user required}
}

relationship OneToMany {
	Cours to Evaluation{cours required}
}

relationship OneToMany {
	Utilisateur to Evaluation{user required}
}

relationship OneToMany {
	Cours to Creneau{cours required}
}

relationship OneToMany {
	Utilisateur to Creneau{user required}
}

relationship ManyToMany {
    Cours{categories} to Categorie{cours required}
}

relationship OneToMany {
    Cours to Reservation{cours required}
}

// si j'annule une reservation, pour etre en mesure de rembourser un paiement je dois lier Reservation a Paiement
